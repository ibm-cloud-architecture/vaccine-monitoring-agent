
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO
quarkus.log.console.enable=true

temperature.threshold=2.5
temperature.max.occurence.count=5
prediction.enabled=false

anomalydetection.scoring/mp-rest/url=${ANOMALY_DETECTION_URL}
anomalydetection.scoring/mp-rest/scope=javax.inject.Singleton
anomalydetection.scoring.wmlToken=${WML_TOKEN}

# Configure the Kafka sink (we write to it)
mp.messaging.outgoing.reefer.connector=smallrye-kafka
mp.messaging.outgoing.reefer.topic=${REEFER_TOPIC:reefers}
mp.messaging.outgoing.reefer.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.reefer.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

# Configure the Kafka source (we read from it)
mp.messaging.incoming.reefer-telemetry.connector=smallrye-kafka
mp.messaging.incoming.reefer-telemetry.topic=${TELEMETRIES_TOPIC:telemetries}
mp.messaging.incoming.reefer-telemetry.group.id=cold-chain-agent
mp.messaging.incoming.reefer-telemetry.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.incoming.reefer-telemetry.value.deserializer=ibm.gse.eda.vaccine.coldchainagent.infrastructure.TelemetryDeserializer

#### Config shared between all kafka connections
# bootstrap server is the only config needed for plain insercure local kafka instance
mp.messaging.connector.smallrye-kafka.bootstrap.servers=${KAFKA_BROKERS}
# If connecting to Event Streams on IBM Cloud or to any Kafka deployment with SSL security
mp.messaging.connector.smallrye-kafka.security.protocol=SASL_SSL
mp.messaging.connector.smallrye-kafka.ssl.protocol=TLSv1.2
mp.messaging.connector.smallrye-kafka.sasl.mechanism=PLAIN
# Make sure you set the username and API key at the end
mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="token" password=${KAFKA_APIKEY};

# If connecting to Event Streams in OpenShift that requires certificates
# Location for the truststore within the container
# #change to es-cert.jks folder] full path
# mp.messaging.connector.smallrye-kafka.ssl.truststore.location=${CERT_LOCATION}
# # Password for the truststore
# mp.messaging.connector.smallrye-kafka.ssl.truststore.password=password